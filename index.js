const express = require("express");
const app = express();
const path = require("path");
const methodOverride = require('method-override')

const { v4: uuidv4 } = require('uuid');

app.use(methodOverride('_method'))
app.use(express.urlencoded ({extended : true}));
app.set("view engine", "ejs");
app.set("views", path.join(__dirname, "views"));

app.use(express.static(path.join(__dirname, "public")));

let port = 8080;

app.listen(port, ()=> {
    console.log(`Server is listening on port : ${port}`);
});


let posts =[
    {
        id : uuidv4(),
        username : "RahulKumar94",
        content : "Today's immersion in the realm of Artificial Intelligence was both invigorating and enlightening! Embracing the unfolding possibilities of AI has been an incredible journey. Witnessing how AI is revolutionizing industries across the globe fuels my passion for innovation and technology. The constant evolution in this field excites me - the potential to create, improve, and impact lives is immense. #AI #Innovation #TechEnthusiast",
    },  
    {
        id : uuidv4(),
        username : "Sneha_25",
        content : "Just attended a gripping webinar on cybersecurity! The discussion on cyber threats and defense strategies was eye-opening. Cybersecurity is not just a necessity; it's an absolute priority in our digitized world. The responsibility to protect data and systems is paramount. Understanding the importance of robust cybersecurity measures in safeguarding information has reinforced my dedication to contributing to this field. #Cybersecurity #DataProtection",
    },
    {
        id : uuidv4(),
        username : "Akash_19",
        content : "Reflecting on the profound impact of collaborative efforts in the tech domain. Today's projects are a testament to the potency of teamwork in driving innovation. The amalgamation of diverse perspectives and skill sets within a team sparks creativity and ingenuity. Embracing the synergy generated by collaborative endeavors fuels our collective pursuit of groundbreaking solutions. Together, we pave the path for transformative advancements. #TechCollab #Innovation",
    },
    {
        id : uuidv4(),
        username : "PriyaSharma",
        content : "Celebrating the richness of diversity in the tech realm! Diverse teams foster a tapestry of ideas, perspectives, and experiences. This mosaic of diversity propels innovation by nurturing inclusivity and openness. Recognizing and valuing diversity not only cultivates a vibrant work culture but also fuels our ability to address multifaceted challenges. Let's champion diversity in tech for a more inclusive future! #DiversityInTech #Inclusion",
    },
    {
        id : uuidv4(),
        username : "Vishal_78",
        content : "Immersing myself in the world of blockchain technology has been enthralling! The decentralized nature of blockchain and its potential to reshape industries captivates me. Exploring its myriad applications, from cryptocurrency to supply chain management, sparks fascination and curiosity. The evolution of blockchain signifies a profound shift in how we perceive and utilize technology. Exciting times ahead! #Blockchain #FutureTech"
    }
]

app.get("/posts", (req,res) => {
    res.render("index.ejs" , { posts});
})


app.get("/posts/new", (req,res) => {
    res.render("new.ejs");
})

// /posts/new kon req gyi to form khul gya, uske baad data add hua

app.post("/posts", (req,res) => {
    let {username , content} = req.body;
    let id = uuidv4();
    posts.push({ id,username,content})
    res.redirect("/posts");
})
 
// fir yaha aae, yaha data add hua, ab chahate h sare post main wale pe show ho to use krenge res.redirect(url), upr use kiya hai

app.get("/posts/:id", (req, res) => {
    let {id} = req.params;
    let post = posts.find((xyz) => id === xyz.id);
    res.render("show.ejs" , {post});
});

app.patch("/posts/:id", (req,res) =>{
    let {id} = req.params;
    let newContent = req.body.content;
    let post = posts.find((xyz) => id === xyz.id);
    post.content = newContent;
    res.redirect("/posts");
})

app.get("/posts/:id/edit", (req,res) =>{
    let {id} = req.params;
    let post = posts.find((xyz) => id === xyz.id);
    res.render("edit.ejs", {post}); 
})




// dlt req

app.delete("/posts/:id", (req,res) =>{
    let {id} = req.params;
    posts = posts.filter((xyz) => id !== xyz.id);
    res.redirect("/posts");
})